
#include "bagl/adjacency_list.h"
#include "bagl/adjacency_range.h"
#include "bagl/bfl_d_ary_tree.h"
#include "bagl/bst_inorder_iterator.h"
#include "bagl/breadth_first_search.h"
#include "bagl/buffer_concepts.h"
#include "bagl/container_traits.h"
#include "bagl/constant_property_map.h"
#include "bagl/d_ary_heap.h"
#include "bagl/depth_first_search.h"
#include "bagl/detail/adjlist_containers.h"
#include "bagl/detail/adjlist_ranges.h"
#include "bagl/detail/container_generators.h"
#include "bagl/detail/edge.h"
#include "bagl/detail/ltree_containers.h"
#include "bagl/has_trait_member.h"
#include "bagl/graph_archetypes.h"
#include "bagl/graph_as_tree.h"
#include "bagl/graph_concepts.h"
#include "bagl/graph_mutability_traits.h"
#include "bagl/graph_selectors.h"
#include "bagl/graph_traits.h"
#include "bagl/graph_utility.h"
#include "bagl/linked_tree.h"
#include "bagl/more_property_maps.h"
#include "bagl/named_graph.h"
#include "bagl/null_property_map.h"
#include "bagl/numeric_values.h"
#include "bagl/partial_range.h"
#include "bagl/properties.h"
#include "bagl/property.h"
#include "bagl/property_map.h"
#include "bagl/topology.h"
#include "bagl/transform_iterator.h"
#include "tree_adaptor.h"
#include "tree_concepts.h"
#include "bagl/tree_traits.h"
#include "vebl_d_ary_tree.h"
#include "bagl/vector_property_map.h"
#include "bagl/visitors.h"

int dummy() { return 0; }
