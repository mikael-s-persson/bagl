
cc_library(
    name = "bagl",
    srcs = [
        "dummy.cc",
    ],
    hdrs = [
        "adjacency_list.h",
        "adjacency_matrix.h",
        "adjacency_range.h",
        "any_iterator.h",
        "astar_search.h",
        "bandwidth.h",
        "bc_clustering.h",
        "bellman_ford_shortest_paths.h",
        "betweenness_centrality.h",
        "bfl_d_ary_tree.h",
        "biconnected_components.h",
        "bipartite.h",
        "boyer_myrvold_planar_test.h",
        "boykov_kolmogorov_max_flow.h",
        "breadth_first_search.h",
        "bron_kerbosch_all_cliques.h",
        "bst_inorder_iterator.h",
        "bucket_sorter.h",
        "buffer_concepts.h",
        "chrobak_payne_drawing.h",
        "circle_layout.h",
        "closeness_centrality.h",
        "clustering_coefficient.h",
        "compressed_sparse_row_graph.h",
        "connected_components.h",
        "constant_property_map.h",
        "container_property_map.h",
        "container_traits.h",
        "core_numbers.h",
        "copy.h",
        "create_condensation_graph.h",
        "cuthill_mckee_ordering.h",
        "cycle_canceling.h",
        "d_ary_heap.h",
        "dag_shortest_paths.h",
        "degree_centrality.h",
        "depth_first_search.h",
        "detail/adjlist_containers.h",
        "detail/adjlist_ranges.h",
        "detail/array_binary_tree.h",
        "detail/augment.h",
        "detail/bfl_tree_ranges.h",
        "detail/compressed_sparse_row_struct.h",
        "detail/container_generators.h",
        "detail/disjoint_sets.h",
        "detail/edge.h",
        "detail/histogram_sort.h",
        "detail/incremental_components.h",
        "detail/index.h",
        "detail/indexed_properties.h",
        "detail/is_distributed_selector.h",
        "detail/labeled_graph_traits.h",
        "detail/ltree_containers.h",
        "detail/set_adaptor.h",
        "detail/sparse_ordering.h",
        "detail/vebl_tree_ranges.h",
        "dijkstra_shortest_paths.h",
        "dijkstra_shortest_paths_no_color_map.h",
        "dimacs.h",
        "directed_graph.h",
        "disjoint_sets.h",
        "dominator_tree.h",
        "dynamic_graph.h",
        "dynamic_property_map.h",
        "edges_from_out_edges.h",
        "edmonds_karp_max_flow.h",
        "eccentricity.h",
        "edge_coloring.h",
        "edge_connectivity.h",
        "edge_list.h",
        "erdos_renyi_generator.h",
        "exception.h",
        "exterior_property.h",
        "filtered_graph.h",
        "find_flow_cost.h",
        "floyd_warshall_shortest.h",
        "fruchterman_reingold.h",
        "function_property_map.h",
        "geodesic_distance.h",
        "geodesic.h",
        "graph_archetypes.h",
        "graph_as_tree.h",
        "graph_concepts.h",
        "graph_mutability_traits.h",
        "graph_selectors.h",
        "graph_stats.h",
        "graph_traits.h",
        "graph_utility.h",
        "grid_graph.h",
        "gursoy_atun_layout.h",
        "has_trait_member.h",
        "hawick_circuits.h",
        "howard_cycle_ratio.h",
        "incremental_components.h",
        "indirect_cmp.h",
        "is_heap.h",
        "is_kuratowski_subgraph.h",
        "is_straight_line_drawing.h",
        "isomorphism.h",
        "johnson_all_pairs_shortest.h",
        "kamada_kawai_spring_layout.h",
        "king_ordering.h",
        "kruskal_min_spanning_tree.h",
        "labeled_graph.h",
        "linked_tree.h",
        "lookup_edge.h",
        "loop_erased_random_walk.h",
        "make_biconnected_planar.h",
        "make_connected.h",
        "make_maximal_planar.h",
        "matrix_property_map.h",
        "maximum_adjacency_search.h",
        "maximum_weighted_matching.h",
        "max_cardinality_matching.h",
        "mcgregor_common_subgraphs.h",
        "mesh_graph_generator.h",
        "metis.h",
        "minimum_degree_ordering.h",
        "more_property_maps.h",
        "mutable_heap.h",
        "mutable_queue.h",
        "named_graph.h",
        "neighbor_bfs.h",
        "null_property_map.h",
        "numeric_values.h",
        "one_bit_color_map.h",
        "page_rank.h",
        "partial_range.h",
        "planar_canonical_ordering.h",
        "planar_detail/add_edge_visitors.h",
        "planar_detail/boyer_myrvold_impl.h",
        "planar_detail/bucket_sort.h",
        "planar_detail/face_handles.h",
        "planar_detail/face_iterators.h",
        "planar_face_traversal.h",
        "plod_generator.h",
        "point_traits.h",
        "prim_minimum_spanning_tree.h",
        "profile.h",
        "properties.h",
        "property.h",
        "property_map.h",
        "property_map_range.h",
        "push_relabel_max_flow.h",
        "random.h",
        "random_layout.h",
        "random_spanning_tree.h",
        "r_c_shortest_paths.h",
        "read_dimacs.h",
        "relax.h",
        "reverse_graph.h",
        "rmat_graph_generator.h",
        "sequential_vertex_coloring.h",
        "simple_point.h",
        "sloan_ordering.h",
        "smallest_last_ordering.h",
        "small_world_generator.h",
        "ssca_graph_generator.h",
        "subgraph.h",
        "successive_shortest_path_nonnegative_weights.h",
        "st_connected.h",
        "stoer_wagner_min_cut.h",
        "strong_components.h",
        "tiernan_all_cycles.h",
        "topological_sort.h",
        "topology.h",
        "transform_iterator.h",
        "transform_value_property_map.h",
        "transitive_closure.h",
        "transitive_reduction.h",
        "transpose_graph.h",
        "tree_adaptor.h",
        "tree_concepts.h",
        "tree_traits.h",
        "two_bit_color_map.h",
        "two_graphs_common_spanning_trees.h",
        "undirected_dfs.h",
        "undirected_graph.h",
        "vebl_d_ary_tree.h",
        "vector_as_graph.h",
        "vector_property_map.h",
        "vertex_and_edge_range.h",
        "vf2_sub_graph_iso.h",
        "visitors.h",
        "wavefront.h",
        "write_dimacs.h",
        "zip_range.h",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "graphml",
    srcs = [
        "graphml.cc",
    ],
    hdrs = [
        "graphml.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":bagl",
        "@tinyxml2",
    ],
)

cc_library(
    name = "graphviz",
    srcs = [
        "graphviz.cc",
    ],
    hdrs = [
        "graphviz.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":bagl",
    ],
)
